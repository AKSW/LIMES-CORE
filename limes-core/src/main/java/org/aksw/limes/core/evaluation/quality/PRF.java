/**
 * 
 */
package org.aksw.limes.core.evaluation.quality;

import java.util.Set;

import org.aksw.limes.core.model.Link;


/**
 * @author mofeed
 *
 */
public abstract class PRF implements QualitativeMeasure{
	public abstract double calculate(Set<Link> predictions, Set<Link> goldStandard);
	
	/**
	 * @param predictions : the mapping generated by the algorithm
	 * @param goldStandard : the gold standard to measure the accuracy comapred to it
	 * @param positive if it is true you calc. true positive otherwise it is false positive
	 * @return based on the flag it returns either True positive or False positive
	 */
	public static double trueFalsePositive(final Set<Link> predictions, final Set<Link> goldStandard, boolean positive)
    {
        double TPCounter = 0,FPCounter=0;
        
        for (Link link : predictions) {
			if(goldStandard.contains(link))
				TPCounter++;
			else 
				FPCounter++;
		}
        if(positive)
        	return TPCounter;
        return FPCounter;
    }
	/**
	 * @param predictions : the mapping generated by the algorithm
	 * @param goldStandard : the gold standard to measure the accuracy comapred to it
	 * @return number of true links in gold standard that are not considered in the predicttion
	 */
	public static double falseNegative(final Set<Link> predictions, final Set<Link> goldStandard)
    {
        double FNCounter = 0;
        
        for (Link link : goldStandard) 
			if(!predictions.contains(link))
				FNCounter++;
        return FNCounter;
    }
	
	public static double trueNegative(final long goldStandardSize, final long sourceDatasetSize, final long targetDatasetSize)
    {
		return (sourceDatasetSize*targetDatasetSize) -goldStandardSize;
    }
}
